version: "3.9"

services:
  frontend:
    image: kitsune-client
    build:
      context: ./client
      dockerfile: Dockerfile.dev
    ports:
      - "4200:80"
    depends_on:
      - backend
      - cdm-backend

  cdm-backend:
    image: ghcr.io/scai-bio/cdm-api:latest
    ports:
      - "8000:80"
    depends_on:
      - cdm-postgres
    environment:
      POSTGRES_USER: testuser
      POSTGRES_PASSWORD: testpass
      POSTGRES_HOST: cdm-postgres
      POSTGRES_PORT: 5432
      POSTGRES_DB: testdb

  cdm-postgres:
    image: postgres:17
    environment:
      POSTGRES_USER: testuser
      POSTGRES_PASSWORD: testpass
      POSTGRES_DB: testdb
      PGDATA: /var/lib/postgresql/17/docker/data/pgdata
    ports:
      - "5433:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U testuser -d testdb"]
      interval: 10s
      timeout: 5s
      retries: 5
    volumes:
      - cdm-postgres-data:/var/lib/postgresql/17/docker/data

  backend:
    image: kitsune-api
    build:
      context: ./api
      dockerfile: Dockerfile.dev
    ports:
      - "5000:80"
    depends_on:
      - postgres
      - ollama
    environment:
      POSTGRES_USER: testuser
      POSTGRES_PASSWORD: testpass
      POSTGRES_PORT: 5432
      POSTGRES_HOST: postgres
      POSTGRES_DB: testdb
      OLLAMA_URL: http://ollama:11434
      MODEL_NAME: "nomic-embed-text"

  postgres:
    image: pgvector/pgvector:pg17
    environment:
      POSTGRES_USER: testuser
      POSTGRES_PASSWORD: testpass
      POSTGRES_DB: testdb
      PGDATA: /var/lib/postgresql/17/docker/data/pgdata
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U testuser -d testdb"]
      interval: 10s
      timeout: 5s
      retries: 5
    volumes:
      - postgres-data:/var/lib/postgresql/17/docker/data

  ollama:
    image: ollama
    build:
      context: ./ollama
      dockerfile: Dockerfile
    ports:
      - "11434:11434"

  importer:
    image: alpine:latest
    depends_on:
      - backend
      - ollama
      - postgres
    entrypoint: >
      sh -c "
        apk add --no-cache curl >/dev/null;
        echo 'Waiting for backend to be ready...';
        until curl -s http://backend:80/docs > dev/null; do
          echo 'Still waiting...';
          sleep 2;
        done;
        echo 'Trigger OLS import...';
        curl -X PUT 'http://backend:80/imports/terminology?terminology_id=doid&model=nomic-embed-text'
      "
    restart: "no"

volumes:
  postgres-data:
  cdm-postgres-data:
    driver: local
